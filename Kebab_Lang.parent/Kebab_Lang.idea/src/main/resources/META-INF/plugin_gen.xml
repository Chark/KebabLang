<idea-plugin version="2">
	<extensions defaultExtensionNs="org.eclipse.xtext.idea">
		<package
			uri="http://www.chark.io/Kebab_Lang"
			class="io.chark.kebab_Lang.Kebab_LangPackage"
		/>
		<resourceFactory 
			type="kebab"
			class="org.eclipse.xtext.resource.IResourceFactory"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
		/>
		<resourceServiceProvider
			uriExtension="kebab"
			class="org.eclipse.xtext.idea.resource.IResourceIdeaServiceProvider"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
		/>

		<lang.setup
			language="io.chark.Kebab_Lang"
			implementationClass="io.chark.idea.Kebab_LangIdeaSetup"
		/>
	</extensions>

	<extensions defaultExtensionNs="com.intellij">
		<psi.treeChangePreprocessor implementation="io.chark.idea.lang.psi.Kebab_LangCodeBlockModificationListener"/>

		<fileTypeFactory implementation="io.chark.idea.lang.Kebab_LangFileTypeFactory"/>
		<stubElementTypeHolder class="io.chark.idea.lang.Kebab_LangElementTypeProvider"/>
		<lang.ast.factory 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="org.eclipse.xtext.idea.lang.BaseXtextASTFactory"
		/>
		<lang.parserDefinition 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="io.chark.idea.lang.parser.Kebab_LangParserDefinition"
		/>
		<lang.findUsagesProvider 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="org.eclipse.xtext.idea.findusages.BaseXtextFindUsageProvider"
		/>
		<lang.refactoringSupport 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="org.eclipse.xtext.idea.refactoring.BaseXtextRefactoringSupportProvider"
		/>
		<lang.namesValidator 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="com.intellij.lang.refactoring.NamesValidator"
		/>
		<lang.syntaxHighlighterFactory key="io.chark.Kebab_Lang" implementationClass="io.chark.idea.highlighting.Kebab_LangSyntaxHighlighterFactory" />
		<lang.braceMatcher 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="com.intellij.lang.PairedBraceMatcher"
		/>
		<annotator 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="org.eclipse.xtext.idea.annotation.IssueAnnotator"
		/>
		<completion.contributor language="io.chark.Kebab_Lang" implementationClass="io.chark.idea.completion.Kebab_LangCompletionContributor"/>
		<pom.declarationSearcher implementation="io.chark.idea.lang.pom.Kebab_LangPomDeclarationSearcher"/>

		<lang.psiStructureViewFactory 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="com.intellij.lang.PsiStructureViewFactory"
		/>
		<facetType implementation="io.chark.idea.facet.Kebab_LangFacetType"/>
      	<lang.documentationProvider 
      		language="io.chark.Kebab_Lang"
      		factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
      		implementationClass="org.eclipse.xtext.idea.documentation.IdeaDocumentationProvider"
      	/>
		<colorSettingsPage implementation="io.chark.idea.highlighting.Kebab_LangColorSettingsPage"/>
		<highlightVisitor implementation="io.chark.idea.highlighting.Kebab_LangSemanticHighlightVisitor"/>

		<lang.formatter 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="com.intellij.formatting.FormattingModelBuilder"
		/>
		<lang.commenter 
			language="io.chark.Kebab_Lang"
			factoryClass="io.chark.idea.Kebab_LangExtensionFactory"
			implementationClass="com.intellij.lang.CodeDocumentationAwareCommenter"
		/>
	</extensions>
</idea-plugin>
