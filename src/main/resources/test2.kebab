@ A complete test of various functions of the kebab-lang.

show('kek\n\nkek')

@ Variable assignment tests.
keb test: 3
test: 'test'
test: [1, 2, 3]
showl(test[0])

@ If statements.
test: 3
_if (test == 3) {
    showl('test is equal to 3')
} _elif(test == 2) {
    showl('test is equal to 2')
} _el {
    showl('test is something else')
}

@ While loops.
test: 0
_loop(test < 10) {
    test: test + 1

    _if (test == 10) {
        showl(test + '.')
    } _el {
        show(test + ', ')
    }
}

@ For-each loops (only work for strings and lists).
test: 'abc'
_loop(i : test) {
    show(i + ' ')
}

test: [1, 2, 3]
_loop(i : test) {
    show(i + ' ')
}
showl()

@ Functions!
_func testLoop(someList : ['super ', 'not '], message : 'end - testLoop') {
    _loop(i : someList) {
        show(i + 'fun ')
    }
    _ret message
}

@ Check if function returned something.
showl(testLoop(test))

@ Call function with no arguments.
showl(testLoop())

@Test an empty func.
_func emptyFunc(end: no) {
    showl('I\'m empty and sad')
    _if (!end) {
        @ Recursion!
        emptyFunc(yes)
    }
}
emptyFunc()

@ Main function is required.
_func main(args) {
    show(args)
    _ret 'da'
}